#
#   ### Interpolate all-cause ylds rate from 5-yr rates to 1-yr rates
#
#
#   data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, `ylds (years lived with disability)_rate_allc`)
#   x <- data$age_cat
#   y <- log(data$`ylds (years lived with disability)_rate_allc`)
#
#   interpolation_func <- stats::splinefun(x, y, method = "monoH.FC", ties = mean)
#
#   interpolated <- as.data.frame(interpolation_func(seq(0, 100, 1)))
#   age <- seq(0, 100, by = 1)
#   interpolated <- cbind(interpolated, age)
#   interpolated[,1] <- exp(interpolated[,1])
#   ## Add column with sex to create age_sex category to then merge with input_life table
#   interpolated$sex <- paste(sex_index)
#   interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
#   ## Change name of column death to mx and ylds to pyld_rate to then merge
#   ## with input_life table
#
#   colnames(interpolated)[1] <- paste("pyld_rate")
#
#   mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
#           & mslt_df$sex == sex_index, ]$pyld_rate <- interpolated$pyld_rate
#
# }
#
# # names(gbd_df)
#
# ### Interpolate road injuries deaths rate from 5-yr rates to 1-yr rates
#
# mslt_df[["pyld_rate_rdin"]] <- NA
# mslt_df[["deaths_rate_rdin"]] <- NA
#
# for(sex_index in i_sex) {
#   # sex_index <- "female"
#   # measure_index <- "deaths_rate_ri"
#
#   data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, deaths_rate_rdin)
#   x <- data$age_cat
#   y <- log(data$deaths_rate_rdin)
#
#   interpolation_func <- stats::splinefun(x, y, method = "monoH.FC", ties = mean)
#
#   interpolated <- as.data.frame(interpolation_func(seq(0, 100, 1)))
#   age <- seq(0, 100, by = 1)
#   interpolated <- cbind(interpolated, age)
#   interpolated[,1] <- exp(interpolated[,1])
#   ## Add column with sex to create age_sex category to then merge with input_life table
#   interpolated$sex <- paste(sex_index)
#   interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
#
#   colnames(interpolated)[1] <- paste("deaths_rate_rdin")
#
#   mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
#           & mslt_df$sex == sex_index, ]$deaths_rate_rdin <- interpolated$deaths_rate_rdin
#
#   ### Interpolate road injuries ylds rate from 5-yr rates to 1-yr rates
#
#   # for(sex_index in i_sex) {
#   #   # sex_index <- "female"
#   #   # measure_index <- "pyld_rate_ri"
#
#   data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, `ylds (years lived with disability)_rate_rdin`)
#   x <- data$age_cat
#   y <- log(data$`ylds (years lived with disability)_rate_rdin`)
#
#   interpolation_func <- stats::splinefun(x, y, method = "monoH.FC", ties = mean)
#
#   interpolated <- as.data.frame(interpolation_func(seq(0, 100, 1)))
#   age <- seq(0, 100, by = 1)
#   interpolated <- cbind(interpolated, age)
#   interpolated[,1] <- exp(interpolated[,1])
#   ## Add column with sex to create age_sex category to then merge with input_life table
#   interpolated$sex <- paste(sex_index)
#   interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
#
#   colnames(interpolated)[1] <- paste("pyld_rate_rdin")
#
#   mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
#           & mslt_df$sex == sex_index, ]$pyld_rate_rdin <- interpolated$pyld_rate_rdin
# }
### INTERPOLATE NEW WORKS
### Interpolate dws rate from 5-yr rates to 1-yr rates
## Add variable names to data frame
for (i in 1:nrow(disease_short_names)){
if (disease_short_names$is_not_dis[i] == 0){
var_name <- paste0("dw_adj_", disease_short_names$sname[i])
mslt_df[, var_name] <- 1
}
}
## interpolate and add interpolated numbers to data frame mslt
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c('dw_adj')){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 0){
#browser()
# i <- 2
# sex_index <- "female"
var_name <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name))
x <- data$age_cat
y <- log(data[[var_name]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
#if (var_name %in% colnames(mslt_df)){
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name]] <- interpolated[[var_name]]
#}
}
}
}
}
## Interpolate road injuries and all cause deaths and ylds
## Add variable names to mslt data frame
for (i in 1:nrow(disease_short_names)){
if (disease_short_names$is_not_dis[i] == 1){
var_name1 <- paste0("deaths_rate", "_", disease_short_names$sname[i])
var_name2 <- paste0("ylds (years lived with disability)", "_", disease_short_names$sname[i])
mslt_df[, var_name1] <- 1
mslt_df[, var_name2] <- 1
}
}
### Deaths
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c('deaths_rate')){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 1){
#browser()
# i <- 2
# sex_index <- "female"
var_name1 <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name1))
x <- data$age_cat
y <- log(data[[var_name1]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name1
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name1]] <- interpolated[[var_name1]]
#}
}
}
}
}
### YLDs
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c("ylds (years lived with disability)_rate")){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 1){
var_name2 <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name2))
x <- data$age_cat
y <- log(data[[var_name2]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name2
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name2]] <- interpolated[[var_name2]]
#}
}
}
}
}
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c("ylds (years lived with disability)_rate")){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 1){
var_name2 <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name2))
x <- data$age_cat
y <- log(data[[var_name2]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name2
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name2]] <- interpolated[[var_name2]]
#}
}
}
}
}
for (i in 1:nrow(disease_short_names)){
if (disease_short_names$is_not_dis[i] == 1){
var_name1 <- paste0("deaths_rate", "_", disease_short_names$sname[i])
var_name2 <- paste0("ylds (years lived with disability)_rate", "_", disease_short_names$sname[i])
mslt_df[, var_name1] <- 1
mslt_df[, var_name2] <- 1
}
}
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c("ylds (years lived with disability)_rate")){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 1){
var_name2 <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name2))
x <- data$age_cat
y <- log(data[[var_name2]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name2
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name2]] <- interpolated[[var_name2]]
#}
}
}
}
}
mslt_df <- data.frame(age = rep(c(0:100), 2), sex = append(rep("male", 101),
rep("female", 101)))
# ------------------- Add population numbers --------------------------- #
## Model in five-year age cohorts, simulated from mid-age in cohort
mslt_df$age_cat [mslt_df$age == 2] <- 2
mslt_df$age_cat [mslt_df$age == 7] <- 7
mslt_df$age_cat [mslt_df$age == 12] <- 12
mslt_df$age_cat [mslt_df$age == 17] <- 17
mslt_df$age_cat [mslt_df$age == 22] <- 22
mslt_df$age_cat [mslt_df$age == 27] <- 27
mslt_df$age_cat [mslt_df$age == 32] <- 32
mslt_df$age_cat [mslt_df$age == 37] <- 37
mslt_df$age_cat [mslt_df$age == 42] <- 42
mslt_df$age_cat [mslt_df$age == 47] <- 47
mslt_df$age_cat [mslt_df$age == 52] <- 52
mslt_df$age_cat [mslt_df$age == 57] <- 57
mslt_df$age_cat [mslt_df$age == 62] <- 62
mslt_df$age_cat [mslt_df$age == 67] <- 67
mslt_df$age_cat [mslt_df$age == 72] <- 72
mslt_df$age_cat [mslt_df$age == 77] <- 77
mslt_df$age_cat [mslt_df$age == 82] <- 82
mslt_df$age_cat [mslt_df$age == 87] <- 87
mslt_df$age_cat [mslt_df$age == 92] <- 92
mslt_df$age_cat [mslt_df$age == 97] <- 97
mslt_df$sex_age_cat <- paste(mslt_df$sex,mslt_df$age, sep = "_"  )
gbd_popn_df <- select(gbd_df, population_number, sex_age_cat)
mslt_df <- left_join(mslt_df, gbd_popn_df, by = "sex_age_cat")
#### Interpolate rates (NEED TO CHANGE INTERPOLATED DATAES)
mslt_df[["mx"]] <- NA
mslt_df[["pyld_rate"]] <- NA
# # View(mslt_df)
#
# ## ADD LOOP, WE NEED TO INTERPOLATE (from gbd_df (saved as i_data))
#
# interpolate_var_death <- c("deaths_rate_allc", "deaths_rate_lwri", "deaths_rate_pdri", "deaths_rate_cyri", "deaths_rate_mtri", "deaths_rate_mvri", "deaths_rate_otri")
#
# interpolate_var_ylds <- c("ylds (years lived with disability)_rate_allc", "ylds (years lived with disability)_rate_lwri", "ylds (years lived with disability)_rate_pdri", "ylds (years lived with disability)_rate_cyri", "ylds (years lived with disability)_rate_mtri", "ylds (years lived with disability)_rate_mvri", "ylds (years lived with disability)_number_otri")
#
# ### Interpolate all-cause mortality rate from 5-yr rates to 1-yr rates
#
# for(sex_index in i_sex) {
#   # sex_index <- "female"
#   # measure_index <- "deaths_rate_allc"
#
#   data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, deaths_rate_allc)
#   x <- data$age_cat
#   y <- log(data$deaths_rate_allc)
#
#   interpolation_func <- stats::splinefun(x, y, method = "monoH.FC", ties = mean)
#
#   interpolated <- as.data.frame(interpolation_func(seq(0, 100, 1)))
#   age <- seq(0, 100, by = 1)
#   interpolated <- cbind(interpolated, age)
#   interpolated[,1] <- exp(interpolated[,1])
#   ## Add column with sex to create age_sex category to then merge with input_life table
#   interpolated$sex <- paste(sex_index)
#   interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
#   ## Change name of column death to mx and ylds to pyld_rate to then merge
#   ## with input_life table
#
#   colnames(interpolated)[1] <- paste("mx")
#
#   mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
#           & mslt_df$sex == sex_index, ]$mx <- interpolated$mx
#
#   ### Interpolate all-cause ylds rate from 5-yr rates to 1-yr rates
#
#
#   data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, `ylds (years lived with disability)_rate_allc`)
#   x <- data$age_cat
#   y <- log(data$`ylds (years lived with disability)_rate_allc`)
#
#   interpolation_func <- stats::splinefun(x, y, method = "monoH.FC", ties = mean)
#
#   interpolated <- as.data.frame(interpolation_func(seq(0, 100, 1)))
#   age <- seq(0, 100, by = 1)
#   interpolated <- cbind(interpolated, age)
#   interpolated[,1] <- exp(interpolated[,1])
#   ## Add column with sex to create age_sex category to then merge with input_life table
#   interpolated$sex <- paste(sex_index)
#   interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
#   ## Change name of column death to mx and ylds to pyld_rate to then merge
#   ## with input_life table
#
#   colnames(interpolated)[1] <- paste("pyld_rate")
#
#   mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
#           & mslt_df$sex == sex_index, ]$pyld_rate <- interpolated$pyld_rate
#
# }
#
# # names(gbd_df)
#
# ### Interpolate road injuries deaths rate from 5-yr rates to 1-yr rates
#
# mslt_df[["pyld_rate_rdin"]] <- NA
# mslt_df[["deaths_rate_rdin"]] <- NA
#
# for(sex_index in i_sex) {
#   # sex_index <- "female"
#   # measure_index <- "deaths_rate_ri"
#
#   data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, deaths_rate_rdin)
#   x <- data$age_cat
#   y <- log(data$deaths_rate_rdin)
#
#   interpolation_func <- stats::splinefun(x, y, method = "monoH.FC", ties = mean)
#
#   interpolated <- as.data.frame(interpolation_func(seq(0, 100, 1)))
#   age <- seq(0, 100, by = 1)
#   interpolated <- cbind(interpolated, age)
#   interpolated[,1] <- exp(interpolated[,1])
#   ## Add column with sex to create age_sex category to then merge with input_life table
#   interpolated$sex <- paste(sex_index)
#   interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
#
#   colnames(interpolated)[1] <- paste("deaths_rate_rdin")
#
#   mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
#           & mslt_df$sex == sex_index, ]$deaths_rate_rdin <- interpolated$deaths_rate_rdin
#
#   ### Interpolate road injuries ylds rate from 5-yr rates to 1-yr rates
#
#   # for(sex_index in i_sex) {
#   #   # sex_index <- "female"
#   #   # measure_index <- "pyld_rate_ri"
#
#   data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, `ylds (years lived with disability)_rate_rdin`)
#   x <- data$age_cat
#   y <- log(data$`ylds (years lived with disability)_rate_rdin`)
#
#   interpolation_func <- stats::splinefun(x, y, method = "monoH.FC", ties = mean)
#
#   interpolated <- as.data.frame(interpolation_func(seq(0, 100, 1)))
#   age <- seq(0, 100, by = 1)
#   interpolated <- cbind(interpolated, age)
#   interpolated[,1] <- exp(interpolated[,1])
#   ## Add column with sex to create age_sex category to then merge with input_life table
#   interpolated$sex <- paste(sex_index)
#   interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
#
#   colnames(interpolated)[1] <- paste("pyld_rate_rdin")
#
#   mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
#           & mslt_df$sex == sex_index, ]$pyld_rate_rdin <- interpolated$pyld_rate_rdin
# }
### INTERPOLATE NEW WORKS
### Interpolate dws rate from 5-yr rates to 1-yr rates
## Add variable names to data frame
for (i in 1:nrow(disease_short_names)){
if (disease_short_names$is_not_dis[i] == 0){
var_name <- paste0("dw_adj_", disease_short_names$sname[i])
mslt_df[, var_name] <- 1
}
}
## interpolate and add interpolated numbers to data frame mslt
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c('dw_adj')){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 0){
#browser()
# i <- 2
# sex_index <- "female"
var_name <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name))
x <- data$age_cat
y <- log(data[[var_name]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
#if (var_name %in% colnames(mslt_df)){
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name]] <- interpolated[[var_name]]
#}
}
}
}
}
## Interpolate road injuries and all cause deaths and ylds
## Add variable names to mslt data frame
for (i in 1:nrow(disease_short_names)){
if (disease_short_names$is_not_dis[i] == 1){
var_name1 <- paste0("deaths_rate", "_", disease_short_names$sname[i])
var_name2 <- paste0("ylds (years lived with disability)_rate", "_", disease_short_names$sname[i])
mslt_df[, var_name1] <- 1
mslt_df[, var_name2] <- 1
}
}
### Deaths
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c('deaths_rate')){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 1){
#browser()
# i <- 2
# sex_index <- "female"
var_name1 <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name1))
x <- data$age_cat
y <- log(data[[var_name1]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name1
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name1]] <- interpolated[[var_name1]]
#}
}
}
}
}
### YLDs
for (i in 1:nrow(disease_short_names)){
for(sex_index in i_sex) {
for (var in c("ylds (years lived with disability)_rate")){#, 'deaths_rate', 'ylds (years lived with disability)_rate')){
if (disease_short_names$is_not_dis[i] == 1){
var_name2 <- paste0(var, '_', disease_short_names$sname[i])
data <- filter(gbd_df, sex == sex_index) %>% select(age, sex, age_cat, starts_with(var_name2))
x <- data$age_cat
y <- log(data[[var_name2]])
interpolated <- as.data.frame(InterFunc(seq(0, 100, 1)))
age <- seq(0, 100, by = 1)
interpolated <- cbind(interpolated, age)
interpolated[,1] <- exp(interpolated[,1])
## Add column with sex to create age_sex category to then merge with input_life table
interpolated$sex <- paste(sex_index)
interpolated$sex_age_cat <- paste(interpolated$sex, interpolated$age, sep = "_")
## Change name of column death to mx and ylds to pyld_rate to then merge
## with input_life table
colnames(interpolated)[1] <- var_name2
interpolated[is.nan(interpolated)] <- 0
interpolated[is.infinite(interpolated)] <- 0
mslt_df[mslt_df$sex_age_cat == interpolated$sex_age_cat
& mslt_df$sex == sex_index, ][[var_name2]] <- interpolated[[var_name2]]
#}
}
}
}
}
mslt_df[["mx"]] <- mslt_df$deaths_rate_allc
mslt_df[["pyld_rate"]] <- mslt_df$`ylds (years lived with disability)_rate_allc`
