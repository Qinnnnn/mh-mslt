disbayes_input_list_city_regions[[index]] <- GenInpDisbayes(gbd_city_region_data_agg[[i]])
names(disbayes_input_list_city_regions)[index] <- paste0(names(gbd_city_region_data_agg[i]))
index <- index + 1
}
for (i in 1:length(disbayes_input_list_city_regions)){
for (j in 1:length(disbayes_input_list_city_regions[[i]])) {
disbayes_input_list_city_regions[[i]][[j]]$cityregion <- paste(names(disbayes_input_list_city_regions[i]))
}
}
disbayes_input_list_city_regions_2 <- list()
index <- 1
for (i in 1:length(gbd_city_region_data)) {
for (dm in 1:length(disease_measures_list)){
for (d in 1:nrow(DISEASE_SHORT_NAMES)){
in_measure <- disease_measures_list[dm] %>% as.character() %>% tolower()
### exclude ylds for now, we are interested in disbayes inputs but later may use ylds uncertainty parameters
if (DISEASE_SHORT_NAMES$is_not_dis[d] != 0 || in_measure == "ylds (years lived with disability)"){
}
else {
med <- paste0(in_measure, "_med_", DISEASE_SHORT_NAMES$sname[d])
low <- paste0(in_measure, "_lower95_", DISEASE_SHORT_NAMES$sname[d])
upper <- paste0(in_measure, "_upper95_", DISEASE_SHORT_NAMES$sname[d])
## These data is in 5-year age groups.
data <- gbd_city_region_data[[i]]
disbayes_input_list_city_regions_2[[index]] <- dplyr::select(data, population_number, cityregion, location, sex_age_cat, med, low, upper)
##### CHRIS, ARE THE FOLLOWING CORRECT? POINT ESTIMATES AND CREDIBLE LIMITS AS RATES PER ONE?
disbayes_input_list_city_regions_2[[index]]$est <- disbayes_input_list_city_regions_2[[index]][[med]]/disbayes_input_list_city_regions_2[[index]][[1]]
disbayes_input_list_city_regions_2[[index]]$lower <- disbayes_input_list_city_regions_2[[index]][[low]]/disbayes_input_list_city_regions_2[[index]][[1]]
disbayes_input_list_city_regions_2[[index]]$upper <- disbayes_input_list_city_regions_2[[index]][[upper]]/disbayes_input_list_city_regions_2[[index]][[1]]
disbayes_input_list_city_regions_2[[index]]$index <- paste(in_measure, DISEASE_SHORT_NAMES$sname[d], sep = "_")
disbayes_input_list_city_regions_2[[index]]$indexagg <- paste(disbayes_input_list_city_regions_2[[index]]$index, disbayes_input_list_city_regions_2[[index]]$sex_age_cat,
disbayes_input_list_city_regions_2[[index]]$cityregion, sep = "_")
## Separate age and sex and
suppressWarnings(names(disbayes_input_list_city_regions_2)[index] <- paste(gbd_city_region_data[[i]]$cityregion,in_measure, DISEASE_SHORT_NAMES$sname[d], sep = '_'))
index <- index + 1
}
}
}
}
View(gbd_city_region_data_agg)
View(gbd_city_region_data_agg)
tryCatchCi2NumDF <- function(x) tryCatch(Ci2NumDF(x), error = function(e) e)
disbayes_input_list_city_regions_3  <- lapply(disbayes_input_list_city_regions_2, tryCatchCi2NumDF)
index <- 1
disbayes_input_list_city_regions_3b <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(NCOL(disbayes_input_list_city_regions_3[[i]]) != as.numeric(4)) {}
else{
disbayes_input_list_city_regions_3b[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
disbayes_input_list_city_regions_3b <-  list.clean(disbayes_input_list_city_regions_3b, fun = is.null, recursive = TRUE)
disbayes_input_list_city_regions_4 <- disbayes_input_list_city_regions_3b %>% lapply(as.data.frame) %>% bind_rows() %>% group_by(indexagg)
View(disbayes_input_list_city_regions_4)
disbayes_input_list_city_regions_5 <- disbayes_input_list_city_regions_4 %>% summarise_all(funs(sum))
disbayes_input_list_city_regions_5$indexagg <- gsub("'", '', disbayes_input_list_city_regions_5$indexagg)
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%  mutate_if(is.character, RemoveAllWs)%>%
mutate(index = indexagg) %>%
separate(indexagg, c("measure", "disease", "sex", "age", "cityregion"))
disbayes_input_list_city_regions_6$agegr <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="Under5"] <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="5to9"] <- 5
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="10to14"] <- 10
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="15to19"] <- 15
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="20to24"] <- 20
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="25to29"] <- 25
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="30to34"] <- 30
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="35to39"] <- 35
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="40to44"] <- 40
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="45to49"] <- 45
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="50to54"] <- 50
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="55to59"] <- 55
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="60to64"] <- 60
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="65to69"] <- 65
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="70to74"] <- 70
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="75to79"] <- 75
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="80to84"] <- 80
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="85to89"] <- 85
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="90to94"] <- 90
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="95plus"] <- 95
city_regions_names <- unique(disbayes_input_list_city_regions_6$cityregion)
disease_disbayes <- unique(disbayes_input_list_city_regions_6$disease)
measure_disbayes <- unique(disbayes_input_list_city_regions_6$measure)
sex_disbayes <- unique(disbayes_input_list_city_regions_6$sex)
## To wider
disbayes_input_list_city_regions_7 <- disbayes_input_list_city_regions_6 %>%
pivot_wider(id_cols = c(agegr, sex, population_number, cityregion, measure, disease),
names_from = measure, values_from = c(num, denom))
View(disbayes_input_list_city_regions_7)
index <- 1
disbayes_input_list2 <- list()
for (c in city_regions_names){
for (d in disease_disbayes){
for (s in sex_disbayes){
disbayes_input_list2[[index]] <- dplyr::filter(disbayes_input_list_city_regions_7, cityregion == c, disease == d, sex == s)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][order(disbayes_input_list2[[index]]$agegr),]
outage <- 0:100  # assume num and denom are the same in each year within a five-year age group
#
ind <- findInterval(outage, disbayes_input_list2[[index]]$agegr)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][ind,]
disbayes_input_list2[[index]]$age <- outage
### It leaves NA values (I need to have all columns filled in)
disbayes_input_list2[[index]]$index <- tolower(paste(disbayes_input_list2[[index]]$sex,
disbayes_input_list2[[index]]$disease,
disbayes_input_list2[[index]]$age,
disbayes_input_list2[[index]]$cityregion, sep = "_"))
# disbayes_input_list2[[index]] <- disbayes_input_list2[[index]] %>% pivot_wider(id_cols = c(index), names_from = measure, values_from = c(num, denom))
index <- index + 1
}
}
}
index <- 1
disbayes_input_list2 <- list()
for (c in city_regions_names){
for (d in disease_disbayes){
for (s in sex_disbayes){
disbayes_input_list2[[index]] <- dplyr::filter(disbayes_input_list_city_regions_7, cityregion == c, disease == d, sex == s)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][order(disbayes_input_list2[[index]]$agegr),]
outage <- 0:100  # assume num and denom are the same in each year within a five-year age group
#
ind <- findInterval(outage, disbayes_input_list2[[index]]$agegr)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][ind,]
disbayes_input_list2[[index]]$age <- outage
### It leaves NA values (I need to have all columns filled in)
disbayes_input_list2[[index]]$index <- tolower(paste(disbayes_input_list2[[index]]$sex,
disbayes_input_list2[[index]]$disease,
disbayes_input_list2[[index]]$age,
disbayes_input_list2[[index]]$cityregion, sep = "_"))
# disbayes_input_list2[[index]] <- disbayes_input_list2[[index]] %>% pivot_wider(id_cols = c(index), names_from = measure, values_from = c(num, denom))
index <- index + 1
}
}
}
disbayes_inputs_df <- do.call(rbind, disbayes_input_list_city_regions)
### Some issue with disease column, which we do not need, to rbind to dataframe
disbayes_inputs_df <- lapply(disbayes_inputs_df, function(x) { x["disease"] <- NULL; x })
disbayes_inputs_df <- dplyr::bind_rows(disbayes_inputs_df)
### CHECK WHAT HAPPENEND WITH CITY REGIONS AND THATN INDEX IS THE SAME AS IN DISBAYES INPUT DATAFRAME2
disbayes_inputs_df$index <- paste(disbayes_inputs_df$sex_disease, disbayes_inputs_df$age_cat, disbayes_inputs_df$cityregion, sep = "_")
## Second data set with num and denom
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:2,4,5,12) ]
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2) %>%
separate(sex_disease, c("drop", "disease"))
disbayes_inputs_latest <- disbayes_inputs[, !(colnames(disbayes_inputs ) %in% c("drop","index"))]
names(disbayes_inputs_latest)[names(disbayes_inputs_latest) == "age_cat"] <- "age"
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2) %>%
separate(sex_disease, c("drop", "disease"))
disbayes_inputs_latest <- disbayes_inputs[, !(colnames(disbayes_inputs_latest) %in% c("drop","index"))]
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2) %>%
separate(sex_disease, c("drop", "disease"))
disbayes_inputs_latest <- disbayes_inputs_latest[, !(colnames(disbayes_inputs_latest) %in% c("drop","index"))]
names(disbayes_inputs_latest)[names(disbayes_inputs_latest) == "age_cat"] <- "age"
View(disbayes_inputs_latest)
View(disbayes_input_list_city_regions_3)
index <- 1
disbayes_input_list_city_regions_3b <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(NCOL(disbayes_input_list_city_regions_3[[i]]) != as.numeric(4)) {}
else{
disbayes_input_list_city_regions_3b[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
names(disbayes_input_list_city_regions_3b)
disbayes_input_list_city_regions_3b <-  list.clean(disbayes_input_list_city_regions_3b, fun = is.null, recursive = TRUE)
View(disbayes_input_list_city_regions_3b)
disbayes_input_list_city_regions_4 <- disbayes_input_list_city_regions_3b %>% lapply(as.data.frame) %>% bind_rows() %>% group_by(indexagg)
View(disbayes_input_list_city_regions_3b)
disbayes_input_list_city_regions_5 <- disbayes_input_list_city_regions_4 %>% summarise_all(funs(sum))
View(disbayes_input_list_city_regions_4)
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%  mutate_if(is.character, RemoveAllWs)%>%
mutate(index = indexagg) %>%
separate(indexagg, c("measure", "disease", "sex", "age", "cityregion"))
names(disbayes_input_list_city_regions_3b)
unique(disbayes_input_list_city_regions_6$cityregion)
disbayes_input_list_city_regions_5 <- disbayes_input_list_city_regions_4 %>% summarise_all(funs(sum))
disbayes_input_list_city_regions_5$indexagg <- gsub("'", '', disbayes_input_list_city_regions_5$indexagg)
View(disbayes_input_list_city_regions_5)
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%  mutate_if(is.character, RemoveAllWs)%>%
mutate(index = indexagg) %>%
separate(indexagg, into=c("measure", "disease", "sex", "age", "cityregion"), sep = "_")
disbayes_input_list_city_regions_5$indexagg <- gsub("'", '', disbayes_input_list_city_regions_5$indexagg)
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%  mutate_if(is.character)%>%
mutate(index = indexagg) %>%
separate(indexagg, into=c("measure", "disease", "sex", "age", "cityregion"), sep = "_")
disbayes_input_list_city_regions_5$indexagg <- gsub("'", '', disbayes_input_list_city_regions_5$indexagg)
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%  mutate_if(is.character)%>%
mutate(index = indexagg) %>%
separate(indexagg, into=c("measure", "disease", "sex", "age", "cityregion"), sep = "_")
disbayes_input_list_city_regions_5$indexagg <- gsub("'", '', disbayes_input_list_city_regions_5$indexagg)
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%
mutate(index = indexagg) %>%
separate(indexagg, into=c("measure", "disease", "sex", "age", "cityregion"), sep = "_")
unique(disbayes_input_list_city_regions_6$cityregion)
disbayes_input_list_city_regions_6$agegr <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="Under 5"] <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="5 to 9"] <- 5
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="10 to 14"] <- 10
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="15 to 19"] <- 15
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="20 to 24"] <- 20
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="25 to 29"] <- 25
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="30 to 34"] <- 30
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="35 to 39"] <- 35
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="40 to 44"] <- 40
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="45 to 49"] <- 45
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="50 to 54"] <- 50
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="55 to 59"] <- 55
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="60 to 64"] <- 60
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="65 to 69"] <- 65
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="70 to 74"] <- 70
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="75 to 79"] <- 75
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="80 to 84"] <- 80
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="85 to 89"] <- 85
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="90 to 94"] <- 90
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="95 plus"] <- 95
city_regions_names <- unique(disbayes_input_list_city_regions_6$cityregion)
disease_disbayes <- unique(disbayes_input_list_city_regions_6$disease)
measure_disbayes <- unique(disbayes_input_list_city_regions_6$measure)
sex_disbayes <- unique(disbayes_input_list_city_regions_6$sex)
disbayes_input_list_city_regions_7 <- disbayes_input_list_city_regions_6 %>%
pivot_wider(id_cols = c(agegr, sex, population_number, cityregion, measure, disease),
names_from = measure, values_from = c(num, denom))
index <- 1
disbayes_input_list2 <- list()
for (c in city_regions_names){
for (d in disease_disbayes){
for (s in sex_disbayes){
disbayes_input_list2[[index]] <- dplyr::filter(disbayes_input_list_city_regions_7, cityregion == c, disease == d, sex == s)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][order(disbayes_input_list2[[index]]$agegr),]
outage <- 0:100  # assume num and denom are the same in each year within a five-year age group
#
ind <- findInterval(outage, disbayes_input_list2[[index]]$agegr)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][ind,]
disbayes_input_list2[[index]]$age <- outage
### It leaves NA values (I need to have all columns filled in)
disbayes_input_list2[[index]]$index <- tolower(paste(disbayes_input_list2[[index]]$sex,
disbayes_input_list2[[index]]$disease,
disbayes_input_list2[[index]]$age,
disbayes_input_list2[[index]]$cityregion, sep = "_"))
# disbayes_input_list2[[index]] <- disbayes_input_list2[[index]] %>% pivot_wider(id_cols = c(index), names_from = measure, values_from = c(num, denom))
index <- index + 1
}
}
}
# ---- chunk-1.6.6: Join dataframes with all disbayes inputs ----
## First data set rates
disbayes_inputs_df <- do.call(rbind, disbayes_input_list_city_regions)
### Some issue with disease column, which we do not need, to rbind to dataframe
disbayes_inputs_df <- lapply(disbayes_inputs_df, function(x) { x["disease"] <- NULL; x })
disbayes_inputs_df <- dplyr::bind_rows(disbayes_inputs_df)
### CHECK WHAT HAPPENEND WITH CITY REGIONS AND THATN INDEX IS THE SAME AS IN DISBAYES INPUT DATAFRAME2
disbayes_inputs_df$index <- paste(disbayes_inputs_df$sex_disease, disbayes_inputs_df$age_cat, disbayes_inputs_df$cityregion, sep = "_")
## Second data set with num and denom
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:2,4,5,12) ]
## Final data set to process in disbayes. Filter data by city region, disease and sex. COMPARE with saved data in rds
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2) %>%
separate(sex_disease, c("drop", "disease"))
disbayes_inputs_latest <- disbayes_inputs_latest[, !(colnames(disbayes_inputs_latest) %in% c("drop","index"))]
names(disbayes_inputs_latest)[names(disbayes_inputs_latest) == "age_cat"] <- "age"
View(disbayes_inputs_latest)
View(disbayes_input_list_city_regions_7)
## Create list
index <- 1
disbayes_input_list2 <- list()
for (c in city_regions_names){
for (d in disease_disbayes){
for (s in sex_disbayes){
disbayes_input_list2[[index]] <- dplyr::filter(disbayes_input_list_city_regions_7, cityregion == c, disease == d, sex == s)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][order(disbayes_input_list2[[index]]$agegr),]
outage <- 0:100  # assume num and denom are the same in each year within a five-year age group
#
ind <- findInterval(outage, disbayes_input_list2[[index]]$agegr)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][ind,]
disbayes_input_list2[[index]]$age <- outage
### It leaves NA values (I need to have all columns filled in)
disbayes_input_list2[[index]]$index <- tolower(paste(disbayes_input_list2[[index]]$sex,
disbayes_input_list2[[index]]$disease,
disbayes_input_list2[[index]]$age,
disbayes_input_list2[[index]]$cityregion, sep = "_"))
# disbayes_input_list2[[index]] <- disbayes_input_list2[[index]] %>% pivot_wider(id_cols = c(index), names_from = measure, values_from = c(num, denom))
index <- index + 1
}
}
}
View(disbayes_input_list2)
## First data set rates
disbayes_inputs_df <- do.call(rbind, disbayes_input_list_city_regions)
disbayes_inputs_df <- lapply(disbayes_inputs_df, function(x) { x["disease"] <- NULL; x })
disbayes_inputs_df <- dplyr::bind_rows(disbayes_inputs_df)
### CHECK WHAT HAPPENEND WITH CITY REGIONS AND THATN INDEX IS THE SAME AS IN DISBAYES INPUT DATAFRAME2
disbayes_inputs_df$index <- paste(disbayes_inputs_df$sex_disease, disbayes_inputs_df$age_cat, disbayes_inputs_df$cityregion, sep = "_")
## Second data set with num and denom
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
View(disbayes_inputs_df2)
unique(disbayes_inputs_df2$cityregion)
test <- filter(disbayes_input_list_city_regions_7, cityregions = "Northern Ireland")
test <- dplyr::filter(disbayes_input_list_city_regions_7, cityregions = "Northern Ireland")
test <- dplyr::filter(disbayes_input_list_city_regions_7, cityregions = `Northern Ireland`)
test <- dplyr::filter(disbayes_input_list_city_regions_7, cityregions == "scotland")
test <- dplyr::filter(disbayes_input_list_city_regions_7, cityregion == "Scotland")
View(test)
## Final data set to process in disbayes. Filter data by city region, disease and sex. COMPARE with saved data in rds
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2) %>%
separate(sex_disease, c("drop", "disease"))
disbayes_inputs_latest <- disbayes_inputs_latest[, !(colnames(disbayes_inputs_latest) %in% c("drop","index"))]
names(disbayes_inputs_latest)[names(disbayes_inputs_latest) == "age_cat"] <- "age"
View(disbayes_inputs_latest)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:2,3,5,12)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:2,3,5,12) ]
## Final data set to process in disbayes. Filter data by city region, disease and sex. COMPARE with saved data in rds
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2, by = "index") %>%
separate(sex_disease, c("drop", "disease"))
View(disbayes_inputs_latest)
## First data set rates
disbayes_inputs_df <- do.call(rbind, disbayes_input_list_city_regions)
View(disbayes_inputs_df)
## First data set rates
disbayes_inputs_df <- do.call(rbind, disbayes_input_list_city_regions)
View(disbayes_inputs_df)
### Some issue with disease column, which we do not need, to rbind to dataframe
disbayes_inputs_df <- lapply(disbayes_inputs_df, function(x) { x["disease"] <- NULL; x })
## First data set rates
disbayes_inputs_df <- do.call(rbind, disbayes_input_list_city_regions)
disbayes_inputs_df <- dplyr::bind_rows(disbayes_inputs_df)
View(disbayes_inputs_df)
### CHECK WHAT HAPPENEND WITH CITY REGIONS AND THATN INDEX IS THE SAME AS IN DISBAYES INPUT DATAFRAME2
disbayes_inputs_df$index <- paste(disbayes_inputs_df$sex_disease, disbayes_inputs_df$age_cat, disbayes_inputs_df$cityregion, sep = "_")
## Second list with num and denom
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
View(disbayes_inputs_df2)
sapply(disbayes_inputs_df2, function(x) sum(is.na(x)))
test_NA <- dplyr::filter(disbayes_inputs_df2, num_prevalence == NA)
test_NA <- dplyr::filter(disbayes_inputs_df2, num_prevalence == "NA")
test_NA <- dplyr::filter(disbayes_inputs_df2, is.na(num_prevalence))
View(test)
View(disbayes_inputs_df2)
View(DISEASE_SHORT_NAMES)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:3,5,12) ]
## Final data set to process in disbayes. Filter data by city region, disease and sex. COMPARE with saved data in rds
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2, by = "index")
View(disbayes_inputs_latest)
disbayes_inputs_df$index <- paste(disbayes_inputs_df$sex_disease, disbayes_inputs_df$age_cat, disbayes_inputs_df$cityregion, sep = "_")
## Second list with num and denom
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:4,5,12) ]
## Final data set to process in disbayes. Filter data by city region, disease and sex. COMPARE with saved data in rds
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2, by = "index")
View(disbayes_inputs_latest)
unique(disbayes_inputs$index)
unique(disbayes_inputs_df2$index)
## Second list with num and denom
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
unique(disbayes_inputs_df2$cityregion)
test <- dplyr::filter(disbayes_inputs_df2, cityregions `West Midlands`)
test <- dplyr::filter(disbayes_inputs_df2, cityregions ==`West Midlands`)
test <- dplyr::filter(disbayes_inputs_df2, cityregion ==`West Midlands`)
test <- dplyr::filter(disbayes_inputs_df2, cityregion ==`West Midlands`)
test <- dplyr::filter(disbayes_inputs_df2, cityregion =="West Midlands")
View(test)
### CHECK WHAT HAPPENEND WITH CITY REGIONS AND THATN INDEX IS THE SAME AS IN DISBAYES INPUT DATAFRAME2
disbayes_inputs_df$index <- tolower(paste(disbayes_inputs_df$sex_disease, disbayes_inputs_df$age_cat, disbayes_inputs_df$cityregion, sep = "_"))
## Second list with num and denom
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:4,5,12) ]
## Final data set to process in disbayes. Filter data by city region, disease and sex. COMPARE with saved data in rds
disbayes_inputs_latest <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2, by = "index")
disbayes_inputs_latest <- disbayes_inputs_latest[, !(colnames(disbayes_inputs_latest) %in% c("sex_index","index"))]
names(disbayes_inputs_latest)[names(disbayes_inputs_latest) == "age_cat"] <- "age"
View(disbayes_inputs_latest)
sapply(disbayes_inputs_df2, function(x) sum(is.na(x)))
write_rds(disbayes_inputs_latest, paste0(relative_path_mslt, "data/city regions/Input disbayes/disbayes_inputs_new", ".rds"))
disbayes_inputs_latest <- disbayes_inputs_latest[, !(colnames(disbayes_inputs_latest) %in% c("sex_index","index", "sex_disease"))]
names(disbayes_inputs_latest)[names(disbayes_inputs_latest) == "age_cat"] <- "age"
write_rds(disbayes_inputs_latest, paste0(relative_path_mslt, "data/city regions/Input disbayes/disbayes_inputs_new", ".rds"))
gbd_data <- plyr::ldply(gbd_city_region_data_agg, rbind)
gbd_data$area <- gbd_data$.id
unique(disbayes_inputs_latest$disease)
NAs <- DF[rowSums(is.na(disbayes_inputs_latest)) > 0,]
NAs <- disbayes_inputs_latest[rowSums(is.na(disbayes_inputs_latest)) > 0,]
View(NAs)
unique(NAs$disease)
unique(NAs$cityregion)
View(disbayes_input_list2)
View(disbayes_input_list_city_regions_3)
index <- 1
disbayes_input_list_city_regions_3b <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(NCOL(disbayes_input_list_city_regions_3[[i]]) != as.numeric(4)) {}
else{
disbayes_input_list_city_regions_3b[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
disbayes_input_list_city_regions_3b <-  list.clean(disbayes_input_list_city_regions_3b, fun = is.null, recursive = TRUE)
disbayes_input_list_city_regions_4 <- disbayes_input_list_city_regions_3b %>% lapply(as.data.frame) %>% bind_rows() %>% group_by(indexagg)
disbayes_input_list_city_regions_5 <- disbayes_input_list_city_regions_4 %>% summarise_all(funs(sum))
NAs_test1 <- disbayes_input_list_city_regions_5[rowSums(is.na(disbayes_input_list_city_regions_5)) > 0,]
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%
mutate(index = indexagg) %>%
separate(indexagg, into=c("measure", "disease", "sex", "age", "cityregion"), sep = "_")
NAs_test2 <- disbayes_input_list_city_regions_6[rowSums(is.na(disbayes_input_list_city_regions_6)) > 0,]
disbayes_input_list_city_regions_6$agegr <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="Under 5"] <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="5 to 9"] <- 5
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="10 to 14"] <- 10
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="15 to 19"] <- 15
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="20 to 24"] <- 20
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="25 to 29"] <- 25
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="30 to 34"] <- 30
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="35 to 39"] <- 35
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="40 to 44"] <- 40
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="45 to 49"] <- 45
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="50 to 54"] <- 50
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="55 to 59"] <- 55
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="60 to 64"] <- 60
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="65 to 69"] <- 65
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="70 to 74"] <- 70
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="75 to 79"] <- 75
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="80 to 84"] <- 80
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="85 to 89"] <- 85
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="90 to 94"] <- 90
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="95 plus"] <- 95
city_regions_names <- unique(disbayes_input_list_city_regions_6$cityregion)
disease_disbayes <- unique(disbayes_input_list_city_regions_6$disease)
measure_disbayes <- unique(disbayes_input_list_city_regions_6$measure)
sex_disbayes <- unique(disbayes_input_list_city_regions_6$sex)
disbayes_input_list_city_regions_7 <- disbayes_input_list_city_regions_6 %>%
pivot_wider(id_cols = c(agegr, sex, population_number, cityregion, measure, disease),
names_from = measure, values_from = c(num, denom))
NAs_test3 <- disbayes_input_list_city_regions_7[rowSums(is.na(disbayes_input_list_city_regions_7)) > 0,]
View(test_NA)
View(disbayes_input_list_city_regions_4)
View(disbayes_input_list_city_regions_3b)
View(disbayes_input_list_city_regions_5)
View(disbayes_input_list_city_regions_6)
test2 <- dplyr::filter(disbayes_input_list_city_regions_6, measure == "prevalence")
View(test2)
test2 <- dplyr::filter(disbayes_input_list_city_regions_6, measure == "prevalence", disease == "strk")
View(test2)
test2 <- dplyr::filter(disbayes_input_list_city_regions_6, measure == "prevalence", disease == "dmt2")
View(test2)
View(disbayes_input_list_city_regions_6)
disbayes_input_list_city_regions_7 <- disbayes_input_list_city_regions_6 %>%
pivot_wider(id_cols = c(measure, disease, sex, age, cityregion, population_number, agegr),
names_from = measure, values_from = c(num, denom))
NAs_test3 <- disbayes_input_list_city_regions_7[rowSums(is.na(disbayes_input_list_city_regions_7)) > 0,]
View(NAs_test3)
unique(NAs_test3$disease)
disbayes_input_list_city_regions_3b <-  list.clean(disbayes_input_list_city_regions_3b, fun = is.null, recursive = TRUE)
disbayes_input_list_city_regions_4 <- disbayes_input_list_city_regions_3b %>% lapply(as.data.frame) %>% bind_rows() %>% group_by(indexagg)
### Old, does not work, replaced by code above
# disbayes_input_list_city_regions_4 <- dplyr::ldply(disbayes_input_list_city_regions_3b, rbind) %>% group_by(indexagg)
disbayes_input_list_city_regions_5 <- disbayes_input_list_city_regions_4 %>% summarise_all(funs(sum))
#### Check NAs
NAs_test1 <- disbayes_input_list_city_regions_5[rowSums(is.na(disbayes_input_list_city_regions_5)) > 0,]
# disbayes_input_list_city_regions_5$indexagg <- gsub("'", '', disbayes_input_list_city_regions_5$indexagg)
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%
mutate(index = indexagg) %>%
separate(indexagg, into=c("measure", "disease", "sex", "age", "cityregion"), sep = "_")
# mutate_if(is.character)%>%
NAs_test2 <- disbayes_input_list_city_regions_6[rowSums(is.na(disbayes_input_list_city_regions_6)) > 0,]
## Add new variable with mid-age group
disbayes_input_list_city_regions_6$agegr <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="Under 5"] <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="5 to 9"] <- 5
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="10 to 14"] <- 10
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="15 to 19"] <- 15
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="20 to 24"] <- 20
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="25 to 29"] <- 25
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="30 to 34"] <- 30
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="35 to 39"] <- 35
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="40 to 44"] <- 40
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="45 to 49"] <- 45
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="50 to 54"] <- 50
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="55 to 59"] <- 55
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="60 to 64"] <- 60
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="65 to 69"] <- 65
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="70 to 74"] <- 70
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="75 to 79"] <- 75
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="80 to 84"] <- 80
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="85 to 89"] <- 85
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="90 to 94"] <- 90
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="95 plus"] <- 95
city_regions_names <- unique(disbayes_input_list_city_regions_6$cityregion)
disease_disbayes <- unique(disbayes_input_list_city_regions_6$disease)
measure_disbayes <- unique(disbayes_input_list_city_regions_6$measure)
sex_disbayes <- unique(disbayes_input_list_city_regions_6$sex)
## To wider
disbayes_input_list_city_regions_7 <- disbayes_input_list_city_regions_6 %>%
pivot_wider(id_cols = c(measure, disease, sex, age, cityregion, population_number, agegr),
names_from = measure, values_from = c(num, denom))
NAs_test3 <- disbayes_input_list_city_regions_7[rowSums(is.na(disbayes_input_list_city_regions_7)) > 0,]
unique(disbayes_input_list_city_regions_6$measure
unique(disbayes_input_list_city_regions_6$measure)
unique(disbayes_input_list_city_regions_6$measure)
unique(disbayes_input_list_city_regions_6$disease)
disbayes_input_list_city_regions_7 <- disbayes_input_list_city_regions_6 %>%
pivot_wider(id_cols = c(measure, disease, sex, age, cityregion, population_number, agegr),
names_from = measure, values_from = c(num, denom))
NAs_test3 <- disbayes_input_list_city_regions_7[rowSums(is.na(disbayes_input_list_city_regions_7)) > 0,]
