write_rds(disbayes_input_list_city_regions_2[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
bristol_prevalence_crdd <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/bristol_prevalence_crdd.rds")
View(bristol_prevalence_crdd)
bristol_prevalence_iscs <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/bristol_prevalence_iscs.rds")
View(bristol_prevalence_iscs)
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2[[i]]
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test <- disbayes_input_list_city_regions_2[[i]]
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test <- list()
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2[[i]]
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test <- list()
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2[[i]]
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]] %>%
separate(sex_age_cat, c("sex", "age"))
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
`Yorkshire and the Humber_incidence_dmt2` <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/Yorkshire and the Humber_incidence_dmt2.rds")
View(`Yorkshire and the Humber_incidence_dmt2`)
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test <- list()
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2[[i]]
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]] %>%
separate(sex_age_cat, c("sex", "age_cat"))
## Order the data
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]][order(disbayes_input_list_city_regions_2_test[[i]]$sex, disbayes_input_list_city_regions_2_test[[i]]$age_cat),]
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
View(`Yorkshire and the Humber_incidence_dmt2`)
bristol_deaths_adaod <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/bristol_deaths_adaod.rds")
View(bristol_deaths_adaod)
warning()
warnings()
Wales_prevalence_crdd <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/Wales_prevalence_crdd.rds")
View(Wales_prevalence_crdd)
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test <- list()
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2[[i]]
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]] %>%
separate(sex_age_cat, c("sex", "age_cat"))
## Order the data
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]][order(disbayes_input_list_city_regions_2_test[[i]]$sex, disbayes_input_list_city_regions_2_test[[i]]$age_cat),]
## Replace age "under" with age 0
disbayes_input_list_city_regions_2_test[[i]]$age_cat <- gsub("under", 0 , disbayes_input_list_city_regions_2_test[[i]]$age_cat)
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
View(Wales_prevalence_crdd)
westmidlands_deaths_adaod <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/westmidlands_deaths_adaod.rds")
View(westmidlands_deaths_adaod)
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test <- list()
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2[[i]]
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]] %>%
separate(sex_age_cat, c("sex", "age_cat"))
## Order the data
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]][order(disbayes_input_list_city_regions_2_test[[i]]$sex, disbayes_input_list_city_regions_2_test[[i]]$age_cat),]
## Replace age "under" with age 0
disbayes_input_list_city_regions_2_test[[i]]$age_cat <- gsub("Under", 0 , disbayes_input_list_city_regions_2_test[[i]]$age_cat)
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
westmidlands_deaths_utrc <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/westmidlands_deaths_utrc.rds")
View(westmidlands_deaths_utrc)
disbayes_input_list_city_regions_2 <- list()
index <- 1
for (i in 1:length(gbd_city_region_data)) {
for (dm in 1:length(disease_measures_list)){
for (d in 1:nrow(DISEASE_SHORT_NAMES)){
in_measure <- disease_measures_list[dm] %>% as.character() %>% tolower()
if (DISEASE_SHORT_NAMES$is_not_dis[d] != 0 || in_measure == "ylds (years lived with disability)")
{
}
else {
med <- paste0(in_measure, "_med_", DISEASE_SHORT_NAMES$sname[d])
low <- paste0(in_measure, "_lower95_", DISEASE_SHORT_NAMES$sname[d])
upper <- paste0(in_measure, "_upper95_", DISEASE_SHORT_NAMES$sname[d])
## These data is in 5-year age groups.
data <- gbd_city_region_data[[i]]
disbayes_input_list_city_regions_2[[index]] <- dplyr::select(data, population_number, cityregion, location, sex_age_cat, med, low, upper)
disbayes_input_list_city_regions_2[[index]]$est <- disbayes_input_list_city_regions_2[[index]][[med]]/disbayes_input_list_city_regions_2[[index]][[1]]
disbayes_input_list_city_regions_2[[index]]$lower <- disbayes_input_list_city_regions_2[[index]][[low]]/disbayes_input_list_city_regions_2[[index]][[1]]
disbayes_input_list_city_regions_2[[index]]$upper <- disbayes_input_list_city_regions_2[[index]][[upper]]/disbayes_input_list_city_regions_2[[index]][[1]]
disbayes_input_list_city_regions_2[[index]]$index <- paste(in_measure, DISEASE_SHORT_NAMES$sname[d], sep = "_")
disbayes_input_list_city_regions_2[[index]]$indexagg <- paste(disbayes_input_list_city_regions_2[[index]]$index, disbayes_input_list_city_regions_2[[index]]$sex_age_cat,
disbayes_input_list_city_regions_2[[index]]$cityregion, sep = "_")
### Separate age and sex and
suppressWarnings(names(disbayes_input_list_city_regions_2)[index] <- paste(gbd_city_region_data[[i]]$cityregion,in_measure, DISEASE_SHORT_NAMES$sname[d], sep = '_'))
index <- index + 1
}
}
}
}
### Save for to inspect problematic diseases
for (i in 1:length(disbayes_input_list_city_regions_2)) {
## Separate age and sex to then order the data by age and sex
disbayes_input_list_city_regions_2_test <- list()
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2[[i]]
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]] %>%
separate(sex_age_cat, c("sex", "age_cat"))
## Order the data
disbayes_input_list_city_regions_2_test[[i]] <- disbayes_input_list_city_regions_2_test[[i]][order(disbayes_input_list_city_regions_2_test[[i]]$sex, disbayes_input_list_city_regions_2_test[[i]]$age_cat),]
## Replace age "under" with age 0
disbayes_input_list_city_regions_2_test[[i]]$age_cat <- gsub("Under", 0 , disbayes_input_list_city_regions_2_test[[i]]$age_cat)
write_rds(disbayes_input_list_city_regions_2_test[[i]],paste0(relative_path_mslt, "data/city regions/Ci2num/",paste0(names(disbayes_input_list_city_regions_2)[i]),".rds"))
}
## Graphs problematic disease
##
## Try catch to skip errors
tryCatchCi2NumDF <- function(x) tryCatch(Ci2NumDF(x), error = function(e) e)
disbayes_input_list_city_regions_3  <- lapply(disbayes_input_list_city_regions_2, tryCatchCi2NumDF)
`West Midlands_incidence_iscs` <- readRDS("C:/Metahit/mh-mslt/data/city regions/Ci2num/West Midlands_incidence_iscs.rds")
View(`West Midlands_incidence_iscs`)
tryCatchCi2NumDF <- function(x) tryCatch(Ci2NumDF(x), error = function(e) e)
disbayes_input_list_city_regions_3  <- lapply(disbayes_input_list_city_regions_2, tryCatchCi2NumDF)
### Graphs to check prevalence inputs for errors
View(`West Midlands_incidence_iscs`)
disbayes_input_list_city_regions_4 <- plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg)
disbayes_input_list_city_regions_5 <- disbayes_input_list_city_regions_4[ -c(1) ] %>% summarise_all(funs(sum))
disbayes_input_list_city_regions_6 <- disbayes_input_list_city_regions_5 %>%  mutate_if(is.character, RemoveAllWs)%>%
mutate(index = indexagg) %>%
separate(indexagg, c("measure", "disease", "sex", "age", "cityregion"))
## Add new variable with mid-age group
disbayes_input_list_city_regions_6$agegr <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="Under5"] <- 0
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="5to9"] <- 5
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="10to14"] <- 10
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="15to19"] <- 15
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="20to24"] <- 20
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="25to29"] <- 25
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="30to34"] <- 30
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="35to39"] <- 35
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="40to44"] <- 40
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="45to49"] <- 45
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="50to54"] <- 50
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="55to59"] <- 55
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="60to64"] <- 60
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="65to69"] <- 65
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="70to74"] <- 70
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="75to79"] <- 75
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="80to84"] <- 80
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="85to89"] <- 85
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="90to94"] <- 90
disbayes_input_list_city_regions_6$agegr [ disbayes_input_list_city_regions_6$age =="95plus"] <- 95
city_regions_names <- unique(disbayes_input_list_city_regions_6$cityregion)
disease_disbayes <- unique(disbayes_input_list_city_regions_6$disease)
measure_disbayes <- unique(disbayes_input_list_city_regions_6$measure)
sex_disbayes <- unique(disbayes_input_list_city_regions_6$sex)
## To wider
disbayes_input_list_city_regions_7 <- disbayes_input_list_city_regions_6 %>% pivot_wider(id_cols = c(agegr, sex, population_number, cityregion, measure, disease), names_from = measure, values_from = c(num, denom))
## Create list
index <- 1
disbayes_input_list2 <- list()
for (c in city_regions_names){
for (d in disease_disbayes){
for (s in sex_disbayes){
disbayes_input_list2[[index]] <- dplyr::filter(disbayes_input_list_city_regions_7, cityregion == c, disease == d, sex == s)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][order(disbayes_input_list2[[index]]$agegr),]
outage <- 0:100  # assume num and denom are the same in each year within a five-year age group
#
ind <- findInterval(outage, disbayes_input_list2[[index]]$agegr)
disbayes_input_list2[[index]] <- disbayes_input_list2[[index]][ind,]
disbayes_input_list2[[index]]$age <- outage
### It leaves NA values (I need to have all columns filled in)
disbayes_input_list2[[index]]$index <- tolower(paste(disbayes_input_list2[[index]]$disease,
disbayes_input_list2[[index]]$sex,
disbayes_input_list2[[index]]$age,
disbayes_input_list2[[index]]$cityregion, sep = "_"))
# disbayes_input_list2[[index]] <- disbayes_input_list2[[index]] %>% pivot_wider(id_cols = c(index), names_from = measure, values_from = c(num, denom))
index <- index + 1
}
}
}
disbayes_inputs_df2 <- do.call(rbind, disbayes_input_list2)
disbayes_inputs_df2 <-   disbayes_inputs_df2[ -c(1:5,10) ]
### Final data set to process in disbayes. Filter data by city region, disease and sex. COMPARE with saved data in rds
disbayes_inputs <- disbayes_inputs_df %>%
left_join(disbayes_inputs_df2)
disbayes_input_list_city_regions_4 <- plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg)
disbayes_input_list_city_regions_4 <- plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg)
disbayes_input_list_city_regions_4 <-  tryCatch(plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg), error = function(e) e)
disbayes_input_list_city_regions_4 <- plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg)
View(disbayes_input_list_city_regions_3)
View(disbayes_input_list_city_regions_3[[1]][[1]])
for (i in 1:length(disbayes_input_list_city_regions_3)) {
disbayes_input_list_city_regions_3[[i]][[1]] != "non-finite value supplied by optim"
}
View(disbayes_input_list_city_regions_3test)
for (i in 1:length(disbayes_input_list_city_regions_3)) {
disbayes_input_list_city_regions_3[[i]][[1]] != "non-finite value supplied by optim"
}
my_list[names(disbayes_input_list_city_regions_3) %in% "non-finite value supplied by optim" == FALSE]
mdisbayes_input_list_city_regions_3[names(disbayes_input_list_city_regions_3) %in% "non-finite value supplied by optim" == FALSE]
disbayes_input_list_city_regions_3[names(disbayes_input_list_city_regions_3) %in% "non-finite value supplied by optim" == FALSE]
View(disbayes_input_list_city_regions_3)
for (i in 1:length(disbayes_input_list_city_regions_3)) {
disbayes_input_list_city_regions_3 <- disbayes_input_list_city_regions_3[[i]][[1]] != "non-finite value supplied by optim"
}
for (i in 1:length(disbayes_input_list_city_regions_3)) {
disbayes_input_list_city_regions_3[[i]] <- disbayes_input_list_city_regions_3[[i]][[1]] != "non-finite value supplied by optim"
}
disbayes_input_list_city_regions_3  <- lapply(disbayes_input_list_city_regions_2, tryCatchCi2NumDF)
tryCatchCi2NumDF <- function(x) tryCatch(Ci2NumDF(x), error = function(e) e)
disbayes_input_list_city_regions_3  <- lapply(disbayes_input_list_city_regions_2, tryCatchCi2NumDF)
disbayes_input_list_city_regions_3[names(disbayes_input_list_city_regions_3) %in% "non-finite value supplied by optim" == FALSE]
for (i in 1:length(disbayes_input_list_city_regions_3)) {
disbayes_input_list_city_regions_3 %in% disbayes_input_list_city_regions_3[[i]][[1]] != "non-finite value supplied by optim"
}
View(disbayes_input_list_city_regions_3)
disbayes_input_list_city_regions_3[names(disbayes_input_list_city_regions_3) %in% "non-finite value supplied by optim" == FALSE]
my_list_2b <- disbayes_input_list_city_regions_3  # Replicate list
my_list_2b[names(my_list_2b) %in% "non-finite value supplied by optim" == FALSE] <- NULL                        # Remove multiple list elements
my_list_2b
my_list_2b <- disbayes_input_list_city_regions_3  # Replicate list
my_list_2b[names(my_list_2b) != "non-finite value supplied by optim"] <- NULL                        # Remove multiple list elements
my_list_2b <- disbayes_input_list_city_regions_3  # Replicate list
my_list_2b[[1]] != "non-finite value supplied by optim" <- NULL                        # Remove multiple list elements
my_list_2b[[1]]
disbayes_input_list_city_regions_4 <- plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg)
disbayes_input_list_city_regions_3[names(disbayes_input_list_city_regions_3) %in% "non-finite value supplied by optim" == FALSE]
disbayes_input_list_city_regions_4 <- plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg)
disbayes_input_list_city_regions_4 <- plyr::ldply(disbayes_input_list_city_regions_3, rbind)
disbayes_input_list_city_regions_4 <- names(disbayes_input_list_city_regions_3) -contains('prevalence') %>%
plyr::ldply(disbayes_input_list_city_regions_3, rbind) %>% group_by(indexagg)
RemovePrev <- function(x) {
x <- x[names(x) != "prevalence"]
if(is.list(x)) lapply(x, RemovePrev)
}
RemovePrev(disbayes_input_list_city_regions_3)
RemovePrev <- function(x) {
x <- x[names(x) != "prevalence"]
if(is.list(x)) lapply(x, RemovePrev)
return
}
RemovePrev(disbayes_input_list_city_regions_3)
RemovePrev <- function(x) {
x <- x[names(x) != "prevalence"]
if(is.list(x)) lapply(x, RemovePrev)
return(x)
}
RemovePrev(disbayes_input_list_city_regions_3)
RemovePrev <- function(x) {
x <- names(x) != "prevalence"
if(is.list(x)) lapply(x, RemovePrev)
return(x)
}
RemovePrev(disbayes_input_list_city_regions_3)
disbayes_input_list_city_regions_3 <-  list.clean(disbayes_input_list_city_regions_3, fun = names(disbayes_input_list_city_regions_3, -contains("prevalence")), recursive = TRUE)
disbayes_input_list_city_regions_3 <-  list.clean(disbayes_input_list_city_regions_3, names(disbayes_input_list_city_regions_3, -contains("prevalence")), recursive = TRUE)
disbayes_input_list_city_regions_3[["prevalence"]] <- NULL
View(disbayes_input_list_city_regions_3)
disbayes_input_list_city_regions_3[["bristol_prevalence_crdd"]] <- NULL
disbayes_input_list_city_regions_3[[contains("prevalence")]] <- NULL
disbayes_input_list_city_regions_3 <-  list.clean(disbayes_input_list_city_regions_3, names(disbayes_input_list_city_regions_3, -contains("prevalence")), recursive = TRUE)
disbayes_input_list_city_regions_3[["prevalence"]] <- NULL
if ("prevalence" %in% names(disbayes_input_list_city_regions_3) ) <- NULL
if ("prevalence" %in% names(disbayes_input_list_city_regions_3)) {NULL}
if ("prevalence" %in% names(disbayes_input_list_city_regions_3)) {NULL}
if ("bristol_prevalence_strk" %in% names(disbayes_input_list_city_regions_3)) {NULL}
if ("bristol_prevalence_strk" %in% names(disbayes_input_list_city_regions_3))
{disbayes_input_list_city_regions_3 <- NULL}
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("bristol_prevalence_strk" %in% names(disbayes_input_list_city_regions_3[[i]]))
{disbayes_input_list_city_regions_3[[i]] <- NULL}
}
tryCatchCi2NumDF <- function(x) tryCatch(Ci2NumDF(x), error = function(e) e)
disbayes_input_list_city_regions_3  <- lapply(disbayes_input_list_city_regions_2, tryCatchCi2NumDF)
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3[[i]]
}
index <-  index + 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
View(disbayes_input_list_city_regions_3test)
index <-  index + 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[index]])) {
} else
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
index <-  index + 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
### Funciton to delete elements of the list with prevalence
index <-  index + 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
index <-  index + 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
index <-  index + 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3[[i]]
}
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("crdd" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3[[i]]
}
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("carc" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3[[i]]
}
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if ("prevalence" %in% names(disbayes_input_list_city_regions_3[[i]])) {
} else
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
View(disbayes_input_list_city_regions_3test)
disbayes_input_list_city_regions_3test[[1]] <- NULL
View(disbayes_input_list_city_regions_3test)
for (i in 1:length(disbayes_input_list_city_regions_3test)) {
disbayes_input_list_city_regions_3test[[i]]$message <- NULL
}
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3
for (i in 1:length(disbayes_input_list_city_regions_3test)) {
disbayes_input_list_city_regions_3test[[i]]$message <- NULL
}
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3
for (i in 1:length(disbayes_input_list_city_regions_3test)) {
disbayes_input_list_city_regions_3test[[i]]$message <- NULL
disbayes_input_list_city_regions_3test[[i]]$call <- NULL
}
View(disbayes_input_list_city_regions_3test)
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3
disbayes_input_list_city_regions_3test %>% purrr::list_modify("prevalence" = NULL)
purrr::discard(disbayes_input_list_city_regions_3test,.p = ~stringr::str_detect(.x,"prevalence"))
disbayes_input_list_city_regions_3test %>% purrr::list_modify("prevalence" = NULL)
disbayes_input_list_city_regions_3test[-which(names(disbayes_input_list_city_regions_3test)== contains("prevalence")]
disbayes_input_list_city_regions_3test[-which(names(disbayes_input_list_city_regions_3test)== contains("prevalence"))]
disbayes_input_list_city_regions_3test[-which(names(disbayes_input_list_city_regions_3test)== "prevalence")]
disbayes_input_list_city_regions_3test[-which(names(disbayes_input_list_city_regions_3test)== "bristol_prevalence_crdd")]
disbayes_input_list_city_regions_3test[-which(names(disbayes_input_list_city_regions_3test)== "bristol_prevalence_crdd")]
disbayes_input_list_city_regions_3test[["bristol_prevalence_crdd"]] <- NULL
grepl("prevalence",disbayes_input_list_city_regions_3test))
grepl("prevalence",disbayes_input_list_city_regions_3test)
disbayes_input_list_city_regions_3test <- disbayes_input_list_city_regions_3
for (i in 1:length(disbayes_input_list_city_regions_3test)) {
if(grepl("prevalence",disbayes_input_list_city_regions_3test) == TRUE) {}
disbayes_input_list_city_regions_3test[[i]] <- disbayes_input_list_city_regions_3test[[i]]
}
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE) {}
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
if(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE)
if(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE)
grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE
grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE
has_prevc <- grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(has_prevc <-  TRUE) {}
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
index <- index + 1
}
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(has_prevc <-  TRUE) {}
else{
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
### Add if condition to exclude prevalence estimates with errors
has_prevc <- grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(has_prevc ==  TRUE) {}
else{
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
warnings()
has_prevc <- c(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE)
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(has_prevc ==  TRUE) {}
else{
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
warning()
warnings()
has_prevc <- c(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE)
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(has_prevc ==  FALSE) {}
else{
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
has_prevc <- c(as.character(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE)
has_prevc <- c(as.character(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE))
has_prevc <- c(grepl("prevalence",disbayes_input_list_city_regions_3) == TRUE) %>% as.character()
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(has_prevc ==  "FALSE") {}
else{
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
index <- 1
disbayes_input_list_city_regions_3test <- list()
for (i in 1:length(disbayes_input_list_city_regions_3)) {
if(has_prevc[[index]] ==  "FALSE") {}
else{
disbayes_input_list_city_regions_3test[[index]] <- disbayes_input_list_city_regions_3[[i]]
}
index <- index + 1
}
disbayes_input_list_city_regions_4 <- dplyr::ldply(disbayes_input_list_city_regions_3test, rbind) %>% group_by(indexagg)
disbayes_input_list_city_regions_4 <- dplyr::ldply(disbayes_input_list_city_regions_3test, rbind) %>% group_by(indexagg)
require(ggpubr)
# require(grid)
require(ggplot2)
# require(pillar)
require(janitor)
require(tidyverse)
require(dplyr)
require(conflicted)
require(rlist)
require(reshape)
require(reshape2)
require(zoo)
require(stringi)
if (interactive()) {
require(conflicted)
}
conflict_prefer("filter", "dplyr")
## Packages for generation of epi inputs
require(devtools)
require(rstan)
require(Rcpp)
require(codetools)
##Additional code to make disbayes work (includes ci2num to create Credible Intervals?)
# install_github("chjackson/disbayes")
require(disbayes)
disbayes_input_list_city_regions_4 <- dplyr::ldply(disbayes_input_list_city_regions_3test, rbind) %>% group_by(indexagg)
final_table <- ddply(product_type_subset,.(general_category, product_type, cas),
summarise,
Value = toString(maximum_weight_fraction[!is.na(maximum_weight_fraction)]))
disbayes_input_list_city_regions_4 <- dplyr::ldply(disbayes_input_list_city_regions_3test, rbind) %>% group_by(indexagg)
